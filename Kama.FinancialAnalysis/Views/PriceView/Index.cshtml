
<style>
    #container {
        height: 600px;
        min-width: 310px;
    }
</style>

<div class="row">

    <div class="col-md-12" style="padding:20px 0">

        <div>
            <label style=" padding: 0px 10px; color: #ffe200">M10</label>
            <label style=" padding: 0px 10px; color: #3dff00">M30</label>
            <label style=" padding: 0px 10px; color: #00ffde">H1</label>
            <label style=" padding: 0px 10px; color: #0006ff">H12</label>
            <label style=" padding: 0px 10px; color: #ff0000">D1</label>
        </div>

        <div id="container"></div>

        <div style="margin: 30px  0;">
            <button type="button" class="btn btn-primary" onclick="GetData(1)">قبلی</button>
            <span id="PageIndex"></span>
            <button type="button" class="btn btn-primary" onclick="GetData(-1)">بعدی</button>
        </div>
    </div>



</div>

<script>

    var _obj;
    var initSession =[];
    var _pageIndex = 1;
    
    getData(0);

    async function initCahrt  () {

        Highcharts.stockChart('container', {
            rangeSelector: {
                buttons: [{
                    type: 'month',
                    count: 1,
                    text: '1m',
                }, {
                    type: 'month',
                    count: 5,
                    text: '5m',
                }, {
                    type: 'month',
                    count: 10,
                    text: '10m',
                }],
                selected: 1,
                inputEnabled: false
            },
            title: {
                text: 'ERU USD'
            },

            yAxis: [{
                labels: {
                    align: 'right',
                    x: -3
                },
                title: {
                    text: 'OHLC'
                },
                height: '70%',
                lineWidth: 2,
                resize: {
                    enabled: true
                }
            }, {
                labels: {
                    align: 'right',
                    x: -3
                },
                title: {
                    text: 'Volume'
                },
                top: '72%',
                height: '28%',
                offset: 0,
                lineWidth: 1
            }],

            //xAxis: {
            //    //plotBands: initSessionObj(),
            //},

            series: [
                {
                    type: 'candlestick',
                    name: 'candles',
                    data: getOhlc(),
                },
                movingAverages('M30'),
                movingAverages('M5'),
                movingAverages('H1'),
                movingAverages('D'),
                standardDeviation('R100'),
                standardDeviation('R500'),
                standardDeviation('R1000'),
            ]
        });
    }

    function getData(p) {
        _pageIndex = _pageIndex + p;
        //$("#PageIndex").text(pageIndex - 1);
        //scrollDiv('chrtCenter')
        $.post("PriceView/ListView", { Type: 1, pageIndex: _pageIndex })
            .done(function (data) {
                _obj = data.Data;
                _obj.Bases = _obj.Bases.reverse();
                _obj.StandardDeviations = _obj.StandardDeviations.reverse();
                _obj.MovingAverages = _obj.MovingAverages.reverse();
                initCahrt();
            })
            .fail(function (e) {
                alert("error" + e);
            });
    }

    function getOhlc() {
        var baseDate = new Date("May 1,1970 11:20:00");
        var obj = [];
        for (var i = 0; i < _obj.Bases.length; i += 1) {

            //var rowTimestamp = parseInt(_obj.Bases[i].Date.match(/\d+/)[0])
            //var rowDate = new Date(rowTimestamp);
            //var minutes = rowDate.getMinutes();
            //var hours = rowDate.getHours();
            //if (minutes == 0 && hours == 0) {
            //    initSession.push(i);
            //}

            baseDate = new Date(baseDate.getTime() + 86400000);
            var t = baseDate.getTime();
            obj.push([
                t,
                _obj.Bases[i].Open,
                _obj.Bases[i].Max,
                _obj.Bases[i].Min,
                _obj.Bases[i].Close
            ]);
        }
        return obj;
    }

    function movingAverages(t) {
        var color;
        switch (t) {
            case 'M5':
                color = '#ffe200'
                break;
            case 'M30':
                color = '#0006ff'
                break;
            case 'D':
                color = '#3dff00'
                break;
            case 'H1':
            default:
                color = '#ff0000'
                break;
        }

        return {
            name: ('MA' + t),
            data: getData(t),
            color: color
        }

        function getData(type) {
            var baseDate = new Date("May 1,1970 11:20:00");
            var obj = [];
            for (var i = 0; i < _obj.MovingAverages.length; i += 1) {
                baseDate = new Date(baseDate.getTime() + 86400000);
                var t = baseDate.getTime();
                obj.push([
                    t,
                    _obj.MovingAverages[i][type]
                ]);
                if (type == 'D')
                    console.log(_obj.MovingAverages[i][type])
            }
            return obj;
        }
    };

    function standardDeviation(t) {
        var color;
        switch (t) {
            case 'R100':
                color = '#00ff80'
                break;
            case 'R500':
                color = '#0011ff'
                break;
            case 'R1000':
            default:
                color = '#ff0021'
                break;
        }

        return {
            name: ('SD' + t),
            data: getData(t),
            yAxis: 1,
            color: color
        }

        function getData(type) {
            var baseDate = new Date("May 1,1970 11:20:00");
            var obj = [];
            for (var i = 0; i < _obj.StandardDeviations.length; i += 1) {
                baseDate = new Date(baseDate.getTime() + 86400000);
                var t = baseDate.getTime();
                obj.push([
                    t,
                    _obj.StandardDeviations[i][type]
                ]);
            }
            return obj;
        }
    };

    function initSessionObj() {
        if (initSession.length > 0) {

        }

        return []
    };


</script>





